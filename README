
#===============================================================#
# ImageJ Plugin - Virtual Stack Symlink Cycler                  #
# Michael Ting							#
# v1.0								#
# Updated 24 July 2013						#
#===============================================================#

#==============#
# Introduction #
#==============#

Stacks in ImageJ are used to load sequences of images, although
this can become problematic when the size of the images are 
not able to fit in RAM. ImageJ also has a function to load
image sequences as Virtual Stacks, which load images from
disk memory rather than RAM. However, Virtual Stacks still
have the limitation of requiring all loaded images to have
the same dimensions.

This plugin does not implement a VirtualStack; rather, it
simulates a VirtualStack by loading images using a cycling
pair of symbolic links in the file system.

#=======#
# Usage #
#=======#

* Place the plugin file in the ImageJ plugins folder.
* Open ImageJ and compile and run the plugin.
* The plugin will prompt you to open an image.
* You can cycle between images in the folder (alphabetically)
  by pressing the left and right arrow keys.

#=================#
# Version History #
#=================#

* v1.0	- Working version of plugin. Will be modified for greater
	  functionality.

#=======#
# Notes #
#=======#

Make sure to include ij.jar on the classpath when compiling 
the Java file.

OR: 

Copy the Java file to the ImageJ PlugIns folder and choose
Compile and Run in the Plugins dropdown menu of ImageJ. Ensure
that ImageJ is using the correct JRE (if outdated, deleting
ImageJ's JRE will default the JRE to the system's JRE).

#========#
# Issues #
#========#

Immediate Issues:
- Use threading for image cycling (Virtual Stack?)

Current Issues:
- (?) Address platform-independence when generating symlinks
- Figure out a more intuitive way to execute shell commands
  from Java file
	- Currently using java.lang.Runtime and java.lang.Process
	- Apache Commons Exec?

